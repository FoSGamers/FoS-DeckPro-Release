name: Build and Upload Platform Apps

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            artifact: FoS-DeckPro.app.zip
          - os: windows-latest
            artifact: FoS-DeckPro.exe
          - os: ubuntu-latest
            artifact: FoS-DeckPro.AppImage

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libegl1 xvfb
      - name: Build executable
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.icns main.py
            cd dist && zip -r FoS-DeckPro.app.zip FoS-DeckPro.app && cd ..
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.ico main.py
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.png main.py
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: dist/${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Generate Release Notes
        id: notes
        run: |
          echo "## 🚀 FoS-DeckPro \\${GITHUB_REF_NAME} – Public Release" > release_notes.md
          echo "" >> release_notes.md
          echo "**FoS-DeckPro** is the all-in-one toolkit for Whatnot sellers and card enthusiasts." >> release_notes.md
          echo "It streamlines inventory management, break building, packing slip processing, analytics, and more—so you can focus on selling and collecting, not busywork." >> release_notes.md
          echo "" >> release_notes.md
          echo "### 🏆 Key Features" >> release_notes.md
          echo "- Break Builder: Effortlessly create, manage, and export Whatnot breaks with advanced filtering, curation, and rule-based workflows." >> release_notes.md
          echo "- Packing Slip Processor: Instantly scan Whatnot packing slip PDFs, extract singles sold, and remove them from inventory with best-match logic." >> release_notes.md
          echo "- Buyers Database & Analytics: Track all buyers, purchase history, and analytics in a modular, extensible database." >> release_notes.md
          echo "- Undo/Restore: Instantly undo packing slip removals for safety and flexibility." >> release_notes.md
          echo "- Scryfall Enrichment: Auto-fill card details and images using Scryfall for any card in your inventory or break." >> release_notes.md
          echo "- Product Listing Export: Export your inventory or break as a CSV for easy copy/paste into product listings (Whatnot, Shopify, TCGplayer, eBay, etc.)." >> release_notes.md
          echo "- Modern UI/UX: Clean, resizable, and user-friendly interface throughout the app." >> release_notes.md
          echo "- Cross-Platform: Download and run on Mac, Windows, or Linux." >> release_notes.md
          echo "" >> release_notes.md
          echo "### 📦 Download" >> release_notes.md
          echo "Download the ready-to-run app for your platform:" >> release_notes.md
          echo "- Mac: FoS-DeckPro.app.zip" >> release_notes.md
          echo "- Windows: FoS-DeckPro.exe" >> release_notes.md
          echo "- Linux: FoS-DeckPro.AppImage" >> release_notes.md
          echo "> If you only see the Mac app, Windows and Linux builds are coming soon!" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 🆕 What's New in \\${GITHUB_REF_NAME}" >> release_notes.md
          echo "- Cross-platform build system (Mac, Windows, Linux)" >> release_notes.md
          echo "- Enhanced public/private separation and release hygiene" >> release_notes.md
          echo "- Updated documentation and onboarding" >> release_notes.md
          echo "- Fully modular, maintainable, and extensible codebase" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 💬 Feedback & Support" >> release_notes.md
          echo "- See the [README](https://github.com/FoSGamers/FoS-DeckPro#readme) for setup and usage instructions." >> release_notes.md
          echo "- Open an issue or discussion for help, feedback, or feature requests." >> release_notes.md
          echo "" >> release_notes.md
          echo "**Thank you for supporting FoS-DeckPro!**" >> release_notes.md
      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: FoS-DeckPro ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Mac Asset
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          files: dist/FoS-DeckPro.app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows Asset
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          files: dist/FoS-DeckPro.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Linux Asset
        if: always()
        uses: softprops/action-gh-release@v1
        with:
          files: dist/FoS-DeckPro.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 