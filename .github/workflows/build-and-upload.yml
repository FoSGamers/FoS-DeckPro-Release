name: Build and Upload Platform Apps

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            artifact: FoS-DeckPro.app.zip
          - os: windows-latest
            artifact: FoS-DeckPro.exe
          - os: ubuntu-latest
            artifact: FoS-DeckPro.AppImage

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build executable
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.icns main.py
            cd dist && zip -r FoS-DeckPro.app.zip FoS-DeckPro.app && cd ..
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.ico main.py
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            pyinstaller --onefile --windowed --name FoS-DeckPro --icon=icon.png main.py
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: dist/${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/FoS-DeckPro.app.zip
          asset_name: FoS-DeckPro.app.zip
          asset_content_type: application/zip
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/FoS-DeckPro.exe
          asset_name: FoS-DeckPro.exe
          asset_content_type: application/octet-stream
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/FoS-DeckPro.AppImage
          asset_name: FoS-DeckPro.AppImage
          asset_content_type: application/octet-stream 